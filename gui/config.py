# E:\projectFiles\programming\.gemini-cli\glen_prototype\src\utils\logging_gui\gui\config.py
"""
Configuration module for the logging GUI.

This file defines essential paths and constants used throughout the application,
ensuring that file locations are managed consistently. It centralizes the
paths for data storage, logs, control flags, and executable scripts.
"""

import os

# Define the absolute path to the directory containing this config file.
# This is used as a base to construct other paths, making them relative to
# the script's location, which enhances portability.
_base_dir = os.path.dirname(os.path.abspath(__file__))

# Define the path to the 'data' directory.
# This directory is intended for storing application data, such as flag files
# that control the behavior of running processes (e.g., pausing).
DATA_DIR = os.path.join(_base_dir, "..", "..", "data")

# Define the path to the 'logs' directory.
# This is the designated location for storing log files generated by the
# main application or its subprocesses.
LOG_DIR = os.path.join(_base_dir, "..", "..", "logs")

# Define the full path for the 'pause.flag' file.
# The existence of this file signals the 'think_core' script to pause its execution.
PAUSE_FLAG_PATH = os.path.join(DATA_DIR, "pause.flag")

# Define the full path for the 'exit.flag' file.
# This flag can be used to signal a graceful exit for running processes.
EXIT_FLAG_PATH = os.path.join(DATA_DIR, "exit.flag")

# Define the absolute path to the 'run_think_core.py' script.
# This is the main script that the GUI launches as a subprocess.
THINK_CORE_SCRIPT_PATH = os.path.abspath(os.path.join(_base_dir, "../", "run_think_core.py"))

# --- Initialization ---

# Ensure that the necessary data and log directories exist upon module import.
# 'exist_ok=True' prevents an error from being raised if the directories
# already exist, making the operation idempotent.
os.makedirs(DATA_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)
